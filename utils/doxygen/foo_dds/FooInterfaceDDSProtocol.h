/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * RPCDDS_LICENSE file included in this RPCDDS distribution.
 *
 *************************************************************************
 * 
 * @file FooInterfaceDDSProtocol.h
 * This header file contains the declaration of the protocol used to create DDS messages.
 *
 * This file was generated by the tool rpcddsgen.
 */

#ifndef _FooInterface_DDS_PROTOCOL_H_
#define _FooInterface_DDS_PROTOCOL_H_

#include "FooInterfaceProtocol.h"
#include "utils/Messages.h"
namespace eprosima
{
    namespace rpcdds
    {
        namespace transport
        {
            namespace dds
            {
                class ProxyProcedureEndpoint;
                class ServerProcedureEndpoint;
                class Transport;
            }
        }
        
        namespace protocol
        {
            namespace dds
            {
                /*!
                 * @brief This class is responsible for serializing and deserializing the requests and responses of this application.
                 *  It uses DDS.
				 * @ingroup FOODDSEXAMPLE
                 */
                class RPCDDSUSERDllExport  FooInterfaceProtocol : public eprosima::rpcdds::protocol::FooInterfaceProtocol
                {
                    public:
                    
                       /*!
                        * @brief Default constructor
                        */
                        FooInterfaceProtocol();
                        
                       /*!
                        * @brief Default destructor
                        */
                        virtual ~FooInterfaceProtocol();
                    
                       /*!
                        * @brief This method sets the transport for the communications.
                        * @param transport Transport to use
                        * @return True if the assignment is successful, false otherwise
                        */
                        virtual bool setTransport(eprosima::rpcdds::transport::Transport &transport);
                        
                        bool activateInterface(const char* interfaceName);
                        
                        /*!
                         * @brief This method implements the proxy part of the protocol for the operation FooProcedure
                         */
                        void FooInterface_FooProcedure();
                        /*!
                         * @brief This method implements the server part of the protocol for the operation FooProcedure
                         */
                        static void FooInterface_FooProcedure_serve(eprosima::rpcdds::protocol::Protocol &protocol,
                            void *data , eprosima::rpcdds::transport::Endpoint *endpoint);

                        
                    private:
                    
                        eprosima::rpcdds::transport::dds::Transport *m_ddsTransport;
                    


                                                                        const char* const FooInterface_FooProcedure_str;
                                                                        
                                                                        eprosima::rpcdds::transport::dds::ProxyProcedureEndpoint *FooInterface_FooProcedure_pe;
                                                                        
                                                                        eprosima::rpcdds::transport::dds::ServerProcedureEndpoint *FooInterface_FooProcedure_se;
                                                                        
                                                                        
                                                
                };
            } // namespace dds
        } // namespace protocol
    } // namespace rpcdds
} // namespace eprosima

#endif // _FooInterface_DDS_PROTOCOL_H_