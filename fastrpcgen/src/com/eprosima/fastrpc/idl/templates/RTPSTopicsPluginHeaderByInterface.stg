/*************************************************************************
 * Copyright (c) 2013 eProsima. All rights reserved.
 *
 * This copy of FASTRPC is licensed to you under the terms described in the
 * FASTRPC_LICENSE file included in this distribution.
 *
 *************************************************************************/

group TopicsPluginHeaderByInterface;

import "eprosima.stg"

main(ctx, definitions) ::= <<
$fileHeader(ctx=ctx,  file=[ctx.filename, "TopicsPlugin.h"], description=["This header file contains the declaration of methods used by DDS middleware."])$

#ifndef _$ctx.filename;format="toUpper"$_TOPICS_PLUGIN_H_
#define _$ctx.filename;format="toUpper"$_TOPICS_PLUGIN_H_

$if(first(ctx.scopedInterfaces))$
#include "$ctx.filename$Topics.h"
$endif$

#include <fastdds/dds/topic/TopicDataType.hpp>

$ctx.directIncludeDependencies : {include | #include "$include$TopicsPlugin.h"}; separator="\n"$

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif
#else
#define eProsima_user_DllExport
#endif

$definitions; separator="\n"$

#endif // _$ctx.filename;format="toUpper"$_TOPICS_PLUGIN_H_
>>

module(ctx, parent, module, definition_list) ::= <<
namespace $module.name$
{
    $definition_list$
}
>>

interface(ctx, parent, interface, export_list) ::= <<
/*!
 * @brief This class encapsulates the methods used on DDS topics by DDS middleware.
 */
class $interface.name$_RequestPlugin : public eprosima::fastdds::dds::TopicDataType
{
    public:

        eProsima_user_DllExport $interface.name$_RequestPlugin();

        virtual eProsima_user_DllExport ~$interface.name$_RequestPlugin();

        eProsima_user_DllExport bool serialize(
                const void* const data,
                eprosima::fastdds::rtps::SerializedPayload_t& payload,
                eprosima::fastdds::dds::DataRepresentationId_t data_representation) override;

        eProsima_user_DllExport bool deserialize(
                eprosima::fastdds::rtps::SerializedPayload_t& payload,
                void* data) override;

        eProsima_user_DllExport uint32_t calculate_serialized_size(
                const void* const data,
                eprosima::fastdds::dds::DataRepresentationId_t data_representation) override;

        eProsima_user_DllExport bool compute_key(
                eprosima::fastdds::rtps::SerializedPayload_t& payload,
                eprosima::fastdds::rtps::InstanceHandle_t& ihandle,
                bool force_md5 = false) override;

        eProsima_user_DllExport bool compute_key(
                const void* const data,
                eprosima::fastdds::rtps::InstanceHandle_t& ihandle,
                bool force_md5 = false) override;

        eProsima_user_DllExport void* create_data() override;

        eProsima_user_DllExport void delete_data(
                void* data) override;

        eProsima_user_DllExport static void* _create_data();

        eProsima_user_DllExport static void _delete_data(void *data);

        eProsima_user_DllExport static void _copy_data($interface.scopedname$_Request *dst,
                const $interface.scopedname$_Request *src);
};

/*!
 * @brief This class encapsulates the methods used on DDS topics by DDS middleware.
 */
class $interface.name$_ReplyPlugin : public eprosima::fastdds::dds::TopicDataType
{
    public:

        eProsima_user_DllExport $interface.name$_ReplyPlugin();

        virtual eProsima_user_DllExport ~$interface.name$_ReplyPlugin();

        eProsima_user_DllExport bool serialize(
                const void* const data,
                eprosima::fastdds::rtps::SerializedPayload_t& payload,
                eprosima::fastdds::dds::DataRepresentationId_t data_representation) override;

        eProsima_user_DllExport bool deserialize(
                eprosima::fastdds::rtps::SerializedPayload_t& payload,
                void* data) override;

        eProsima_user_DllExport uint32_t calculate_serialized_size(
                const void* const data,
                eprosima::fastdds::dds::DataRepresentationId_t data_representation) override;

        eProsima_user_DllExport bool compute_key(
                eprosima::fastdds::rtps::SerializedPayload_t& payload,
                eprosima::fastdds::rtps::InstanceHandle_t& ihandle,
                bool force_md5 = false) override;

        eProsima_user_DllExport bool compute_key(
                const void* const data,
                eprosima::fastdds::rtps::InstanceHandle_t& ihandle,
                bool force_md5 = false) override;

        eProsima_user_DllExport void* create_data() override;

        eProsima_user_DllExport void delete_data(
                void* data) override;

        eProsima_user_DllExport static void* _create_data();

        eProsima_user_DllExport static void _delete_data(void *data);

        eProsima_user_DllExport static void _copy_data($interface.scopedname$_Reply *dst,
                const $interface.scopedname$_Reply *src);
};

>>
