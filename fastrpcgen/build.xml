<?xml version="1.0"?>
<!--
 * $Id$   *
 * (c) Copyright, eProsima, 2009.                                          *
 * All rights reserved.                                                    *    
 *                                                                         *
 * No duplications, whole or partial, manual or electronic, may be made    *
 * without express written permission.  Any such copies, or                *
 * revisions thereof, must display this notice unaltered.                  *
 * This code contains trade secrets of                                     *
 * eProsima (Proyectos y Sistemas de Mantenimiento S.L.)                   *
 *                                                                         *
 * modification history                                                    *
 * ====================                                                    *
 * 1.0,29sep09,RodM Created                                                *
 * =====================================================================   *
-->

<project name="fastrpcgen" default="jars" basedir=".">

	<macrodef name="antxr">
		<attribute name="base" />
		<attribute name="grammar" />
		<sequential>
            <java classname="com.javadude.antxr.Tool" classpath="../classes/antxr.jar">
				<arg value="-o" />
				<arg value="@{base}" />
				<arg value="@{grammar}" />
			</java>
		</sequential>
	</macrodef>

	<target name="init">
		<tstamp>
			<format property="src.timestamp" pattern="dd/MM/yyyy" />
			<format property="year" pattern="2009-yyyy" />
		</tstamp>

		<!-- Allow any user specific values to override the defaults -->
		<property file="./build.properties" />
		<property environment="env" />

		<property name="Name" value="${ant.project.name}" />
		<property name="name" value="${ant.project.name}" />
		<property name="copyright" value="${year} Proyectos y Sistema de Mantenimiento S.L" />

		<!-- Filters -->
		<filter token="date" value="${src.timestamp}" />
		<filter token="version" value="${version}" />
		<filter token="copyright" value="${copyright}" />

		<!-- Source related properties -->
		<property name="fastrpc.dir" value="${basedir}" />
		<property name="fastrpc.src.dir" value="${fastrpc.dir}${file.separator}src" />
		<property name="fastrpc.src.java" value="${fastrpc.src.dir}" />
		<property name="fastrpc.grammar.dir" value="${fastrpc.dir}${file.separator}grammars" />
        <property name="idl.dir" value="${basedir}${file.separator}..${file.separator}thirdparty${file.separator}idl" />
        <property name="idl.classes.dir" value="${idl.dir}${file.separator}build${file.separator}classes" />
        <property name="idl.src.dir" value="${idl.dir}${file.separator}src/main/java" />
		<property name="idl.src.java" value="${idl.src.dir}" />
        <property name="fastcdr.dir" value="${basedir}${file.separator}..${file.separator}thirdparty${file.separator}fastcdr" />
        <property name="fastcdr.src.dir" value="${fastcdr.dir}${file.separator}src${file.separator}java" />
		<property name="fastcdr.src.java" value="${fastcdr.src.dir}" />
        <property name="lib.dir" value="${basedir}${file.separator}..${file.separator}classes${file.separator}" />
		<property name="test.dir" value="${basedir}${file.separator}test${file.separator}simple${file.separator}" />
		<property name="tmp.dir" value="./tmp" />
		<property name="src.excludes" value="" />

		<!-- Build related properties -->
		<property name="build.dir" value="${basedir}${file.separator}build" />
		<property name="build.src" value="${build.dir}${file.separator}src" />
		<property name="build.classes" value="${build.dir}" />
		<property name="build.javadocs" value="${basedir}${file.separator}docs${file.separator}api" />
		<property name="build.fastrpcgen.jar" value="${lib.dir}${file.separator}${name}.jar" />
		<property name="build.rpcddsgen.jar" value="${lib.dir}${file.separator}rpcddsgen.jar" />
		<property name="build.rpcrestgen.jar" value="${lib.dir}${file.separator}rpcrestgen.jar" />

		<path id="build.classpath">
			<fileset dir="${lib.dir}">
				<include name="antlr-4.4.jar" />
				<include name="stringtemplate-3.2.1.jar" />
				<include name="antxr.jar" />
			</fileset>
			<!-- <fileset dir="${idl.dir}${file.separator}build${file.separator}libs" >
				<include name="*.jar" />
			</fileset> -->
		</path>

		<path id="run.classpath">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
			<!-- <fileset dir="${idl.dir}${file.separator}build${file.separator}libs" >
				<include name="*.jar" />
			</fileset> -->
		</path>

		<property name="dist.basedir" value="${build.dir}" />
		<property name="dist.includes" value="${name}${file.separator}**" />
		<property name="dist.excludes" value="**/prj/**,
            **/dist/**,
             **/test/**,
             **/model/**,
             **/build/**,
             **/.DS_Store" />
		<property name="packages" value="${build.packages}" />
		<property name="library.includes" value="${bundle.includes}" />

	</target>
	
	<!-- =================================================================== -->
	<!-- IDL build and clean targets                                         -->
	<!-- =================================================================== -->
	<target name="compile-idl">
		<!-- Echo compilation properties -->
		<echo>Building IDL ANTLR grammars... Some warnings are expected...</echo>
		<exec executable="cmd" osfamily="windows">
			<arg value="/c"/>
			<arg value="gradle -b ./../thirdparty/idl/build.gradle build"/>
		</exec>
		<exec executable="gradle" osfamily="unix">
			<arg value="-b"/>
			<arg value="./../thirdparty/idl/build.gradle"/>
            <arg value="build"/>
		</exec>
		<copy todir="${build.classes}${file.separator}com${file.separator}eprosima" >
			<fileset dir="${idl.classes.dir}${file.separator}main${file.separator}com${file.separator}eprosima" />
		</copy>
	</target>
	
	<target name="clean-idl">
		<exec executable="cmd" osfamily="windows">
			<arg value="/c"/>
			<arg value="gradle -b ./../thirdparty/idl/build.gradle clean"/>
		</exec>
		<exec executable="gradle" osfamily="unix">
			<arg value="-b"/>
			<arg value="./../thirdparty/idl/build.gradle"/>
            <arg value="clean"/>
		</exec>
	</target>


	<!-- =================================================================== -->
	<!-- Basic build targets                                                 -->
	<!-- =================================================================== -->
	<target name="prepare-sources" depends="init">
		<mkdir dir="${build.dir}" />
	</target>

	<!-- =================================================================== -->
	<!-- Compiles the source code                                            -->
	<!-- =================================================================== -->
	<target name="compile" depends="init, prepare-sources, compile-idl" description="Compiles the sources. (Default)">
		<echo>Building WADL ANTXR grammars... Some warnings are expected...</echo>
		<antxr base="${fastrpc.src.java}${file.separator}com/eprosima/fastrpc/wadl/grammar" grammar="${fastrpc.grammar.dir}${file.separator}wadl.antxr" />
		<echo>Compiling java code...</echo>
		<mkdir dir="${build.classes}" />
        <javac source="1.6" target="1.6" srcdir="${fastrpc.src.java}:${fastcdr.src.java}" destdir="${build.classes}">
			<classpath refid="build.classpath"/>
		</javac>
        <!--> Copy stringtemplates of idl parser <-->
        <copy todir="${build.classes}">
            <fileset dir="${idl.src.java}" includes="**/*.stg"/>
        </copy>
        <!--> Copy stringtemplates of fastrpc.<-->
		<copy todir="${build.classes}">
			<fileset dir="${fastrpc.src.dir}" includes="**/*.stg" />
		</copy>
        <!--> Copy stringtemplates of fastcdr.<-->
        <copy todir="${build.classes}">
            <fileset dir="${fastcdr.src.java}" includes="**/*.stg"/>
        </copy>
        <!--> Copy platform file.<-->
		<copy todir="${build.classes}">
			<fileset dir="${basedir}${file.separator}..${file.separator}src">
				<include name="platforms" />
			</fileset>
		</copy>
        <!--> Copy version file.<-->
		<copy todir="${build.classes}">
			<fileset dir="${basedir}${file.separator}..${file.separator}include${file.separator}fastrpc">
				<include name="fastrpc_version.h" />
			</fileset>
		</copy>
	</target>

    <target name="includejars" depends="init,compile" description="Incluide dependent Jar files.">
        <copy todir="${build.dir}">
            <restrict>
                <name name="*.class"/>
                <archives>
                    <zips>
                        <fileset dir="${lib.dir}" includes="antlr-4.4.jar,antlr-2.7.7.jar,stringtemplate-3.2.1.jar,antxr.jar" />
                    </zips>
                </archives>
            </restrict>
        </copy>
    </target>

	<!-- =================================================================== -->
	<!-- Creates the jar archive                                             -->
	<!-- =================================================================== -->
	<target name="fastrpcgen_jar" depends="init,compile,includejars" description="Builds the fastrpcgen library (.jar).">
		<jar jarfile="${build.fastrpcgen.jar}" basedir="${build.classes}" manifest="manifest">
		</jar>
	</target>

	<target name="rpcddsgen_jar" depends="init,compile,includejars" description="Builds the rpcddsgen library (.jar).">
		<jar jarfile="${build.rpcddsgen.jar}" basedir="${build.classes}" manifest="manifest_rpcddsgen">
		</jar>
	</target>

	<target name="rpcrestgen_jar" depends="init,compile,includejars" description="Builds the rpcrestgen library (.jar).">
		<jar jarfile="${build.rpcrestgen.jar}" basedir="${build.classes}" manifest="manifest_rpcrestgen">
		</jar>
	</target>

    <target name="jars" depends="fastrpcgen_jar,rpcddsgen_jar,rpcrestgen_jar" description="Builds all libraries (.jar)"/>

	<!-- =================================================================== -->
	<!-- Cleans up generated classes                                         -->
	<!-- =================================================================== -->
	<target name="clean-classes" depends="init, clean-idl">
		<delete dir="${build.classes}" />
	</target>
</project>

