/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * RPCDDS_LICENSE file included in this RPCDDS distribution.
 *
 *************************************************************************
 * 
 * @file CalculatorProtocol.h
 * This header file contains the declaration of the interface for all protocols.
 *
 * This file was generated by the tool rpcddsgen.
 */

#ifndef _Calculator_PROTOCOL_H_
#define _Calculator_PROTOCOL_H_

#include "rpcdds/protocols/Protocol.h"
#include "Calculator.h"
#include "CalculatorServerImpl.h"
#include "ndds_namespace_cpp.h"

namespace eprosima
{
    namespace rpcdds
    {
        namespace protocol
        {
            /*!
             * @brief Protocol base class for the specific application
             */
            class RPCDDSUSERDllExport CalculatorProtocol : public Protocol
            {
                public:
                
                   /*!
                    * @brief This method sets the transport for the communications. It has to be implemented by the children classes.
                    * @param transport Transport to use.
                    * @return True if the assignment is successful, false otherwise
                    */
                    virtual bool setTransport(eprosima::rpcdds::transport::Transport &transport) = 0;
                    
                    virtual bool activateInterface(const char* interfaceName) = 0;
                    
                                       /*!
                                        * @brief This method links a specific servant with the protocol.
                                        * @param impl Servant implementation.
                                        */
                                        void linkCalculator_addResourceImpl(Calculator::addResourceServerImpl &impl)
                                        {
                                            _Calculator_addResource_impl = &impl;
                                        }
                                        
                                       /*!
                                        * @brief This method links a specific servant with the protocol.
                                        * @param impl Servant implementation.
                                        */
                                        void linkCalculator_substractResourceImpl(Calculator::substractResourceServerImpl &impl)
                                        {
                                            _Calculator_substractResource_impl = &impl;
                                        }
                                        
                                       /*!
                                        * @brief This method links a specific servant with the protocol.
                                        * @param impl Servant implementation.
                                        */
                                        void linkCalculator_multiplyResourceImpl(Calculator::multiplyResourceServerImpl &impl)
                                        {
                                            _Calculator_multiplyResource_impl = &impl;
                                        }
                                        
                                       /*!
                                        * @brief This method links a specific servant with the protocol.
                                        * @param impl Servant implementation.
                                        */
                                        void linkCalculator_divideResourceImpl(Calculator::divideResourceServerImpl &impl)
                                        {
                                            _Calculator_divideResource_impl = &impl;
                                        }
                                        
                             



                    /*!
                     * @brief This method implements the proxy part of the protocol for the operation add
                     *        It has to be implemented by the child classes.
                     */
                    virtual Calculator::AddResponse Calculator_addResource_add(/*in*/ DDS_Long a, /*in*/ DDS_Long b) = 0;




                    /*!
                     * @brief This method implements the proxy part of the protocol for the operation substract
                     *        It has to be implemented by the child classes.
                     */
                    virtual Calculator::SubstractResponse Calculator_substractResource_substract(/*in*/ DDS_Long a, /*in*/ DDS_Long b) = 0;




                    /*!
                     * @brief This method implements the proxy part of the protocol for the operation multiply
                     *        It has to be implemented by the child classes.
                     */
                    virtual Calculator::MultiplyResponse Calculator_multiplyResource_multiply(/*in*/ DDS_Long a, /*in*/ DDS_Long b) = 0;




                    /*!
                     * @brief This method implements the proxy part of the protocol for the operation divide
                     *        It has to be implemented by the child classes.
                     */
                    virtual Calculator::DivideResponse Calculator_divideResource_divide(/*in*/ DDS_Long a, /*in*/ DDS_Long b) = 0;


                    
                protected:
                
                    CalculatorProtocol() : Protocol()
                                         
                                        , _Calculator_addResource_impl(NULL)
                                        
                                         
                                        , _Calculator_substractResource_impl(NULL)
                                        
                                         
                                        , _Calculator_multiplyResource_impl(NULL)
                                        
                                         
                                        , _Calculator_divideResource_impl(NULL)
                                        
                    {}
                    
                    virtual ~CalculatorProtocol(){}
                
                	                     
                	                    Calculator::addResourceServerImpl *_Calculator_addResource_impl;
                	                    
                	                     
                	                    Calculator::substractResourceServerImpl *_Calculator_substractResource_impl;
                	                    
                	                     
                	                    Calculator::multiplyResourceServerImpl *_Calculator_multiplyResource_impl;
                	                    
                	                     
                	                    Calculator::divideResourceServerImpl *_Calculator_divideResource_impl;
                	                    
                    
            };
        } // namespace protocol
    } // namespace rpcdds
} // namespace eprosima

#endif // _Calculator_PROTOCOL_H_
