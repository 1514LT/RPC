/*************************************************************************
 * Copyright (c) 2012 eProsima. All rights reserved.
 *
 * This generated file is licensed to you under the terms described in the
 * RPCDDS_LICENSE file included in this RPCDDS distribution.
 *
 *************************************************************************
 * 
 * @file CalculatorServerImpl.h
 * This header file contains the declaration of the skeleton for all interfaces.
 *
 * This file was generated by the tool rpcddsgen.
 */

#ifndef _CalculatorSERVER_IMPL_H_
#define _CalculatorSERVER_IMPL_H_

#include "rpcdds/utils/Messages.h"
#include "Calculator.h"

namespace Calculator
{
    /**
     * \brief This class is the skeleton of the servant and its remote procedures has to be implemented.
     */
    class addResourceServerImpl
    {
        public:

            /// \brief The default constructor.
            addResourceServerImpl(){}

            /// \brief The default destructor.
            virtual ~addResourceServerImpl(){}




            /// \brief Skeleton of the operation add
            virtual Calculator::AddResponse add(/*in*/ DDS_Long a, /*in*/ DDS_Long b) = 0;
    ;
    };

    /**
     * \brief This class is the skeleton of the servant and its remote procedures has to be implemented.
     */
    class substractResourceServerImpl
    {
        public:

            /// \brief The default constructor.
            substractResourceServerImpl(){}

            /// \brief The default destructor.
            virtual ~substractResourceServerImpl(){}




            /// \brief Skeleton of the operation substract
            virtual Calculator::SubstractResponse substract(/*in*/ DDS_Long a, /*in*/ DDS_Long b) = 0;
    ;
    };

    /**
     * \brief This class is the skeleton of the servant and its remote procedures has to be implemented.
     */
    class multiplyResourceServerImpl
    {
        public:

            /// \brief The default constructor.
            multiplyResourceServerImpl(){}

            /// \brief The default destructor.
            virtual ~multiplyResourceServerImpl(){}




            /// \brief Skeleton of the operation multiply
            virtual Calculator::MultiplyResponse multiply(/*in*/ DDS_Long a, /*in*/ DDS_Long b) = 0;
    ;
    };

    /**
     * \brief This class is the skeleton of the servant and its remote procedures has to be implemented.
     */
    class divideResourceServerImpl
    {
        public:

            /// \brief The default constructor.
            divideResourceServerImpl(){}

            /// \brief The default destructor.
            virtual ~divideResourceServerImpl(){}




            /// \brief Skeleton of the operation divide
            virtual Calculator::DivideResponse divide(/*in*/ DDS_Long a, /*in*/ DDS_Long b) = 0;
    ;
    };

};


#endif // _CalculatorSERVER_IMPL_H_
